\documentclass[a4paper]{article} % ,twoside
% \usepackage[norsk]{babel}
% \usepackage[utf8x]{inputenc}
% \usepackage{subfig}
% \usepackage{pdfpages}
% \usepackage{booktabs}
% \usepackage{caption}
% \usepackage{amssymb}
% \usepackage[a4paper]{geometry}
\usepackage[pdftex, colorlinks, linkcolor=lysblaa, urlcolor=lysblaa]{hyperref}
\usepackage{array}
\newcolumntype{R}[1]{>{\raggedleft\let\newline\\\arraybackslash\hspace{0pt}}p{#1}}
\newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
\newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

\title{Ethirgast Monthly Report}
\author{Ethirgast}

\usepackage{xcolor}
\usepackage{graphicx}

<<'initOpts',include=FALSE>>=
knitr::opts_chunk$set(warnings=FALSE,echo=FALSE)
knitr::opts_knit$set(root.dir = './')
@


<<LastData, include=FALSE, cache=FALSE>>=
rm(list=ls())

library(dplyr)
options(dplyr.summarise.inform = FALSE)

centre <- rapbase::loadRegData("ethirgast2", "SELECT * FROM centre")
mce <- rapbase::loadRegData("ethirgast2", "SELECT * FROM mce")
ninetydays <-
  rapbase::loadRegData("ethirgast2", "SELECT * FROM ninetydays") %>%
  filter(CENTREID == 1)
patient <- rapbase::loadRegData("ethirgast2", "SELECT * FROM patient")
readmission <-
  rapbase::loadRegData("ethirgast2", "SELECT * FROM readmission")%>%
  filter(CENTREID == 1)
registration <-
  rapbase::loadRegData("ethirgast2", "SELECT * FROM registration") %>%
  filter(CENTREID == 1) %>%
  mutate(
    operation_group = case_when(
      (substr(NCSP, 1, 3) == "JFB" |
         (substr(NCSP, 1, 3) == "JFB" & (substr(NCSP, 4, 5) %in% 20:64))) ~ "Colonic resection",
      substr(NCSP, 1, 3) == "JGB" ~ "Rectal resection",
      substr(NCSP, 1, 3) == "JCC" ~ "Oesofagus resection",
      substr(NCSP, 1, 3) %in% c("JDC", "JDD") ~ "Gastric resection",
      substr(NCSP, 1, 3) %in% c("JJB") ~ "Liver resection",
      substr(NCSP, 1, 5) %in% c("JLC30","JLC31") ~ "Whipple's procedure",
      substr(NCSP, 1, 5) %in% c('JLC10','JLC11', 'JLC00',
                                'JLC20','JLC40', 'JLC50', 'JLC96') ~
        "Distal and other pancreatic",
      substr(NCSP, 1, 3) == "JKC" ~ "Biliary bypass procedures",
      substr(NCSP, 1, 3) == "JFG" ~ "Stoma reversal procedures",
      substr(NCSP, 1, 3) == "JKD" & substr(ICD10, 1, 1) %in% c("C", "D") ~
        "Biliodigestive anastomosis, C & D diagnosis",
      substr(NCSP, 1, 3) == "JKD" & !(substr(ICD10, 1, 1) %in% c("C", "D")) ~
        "Biliodigestive anastomosis, benign aethiology",
      .default = "Other"
    ))

regdata_all <- registration %>%
  dplyr::filter(CENTREID == 1) %>%
  merge(readmission, by = "MCEID",
        suffixes = c("", "_READMISSION"),
        all.x = TRUE) %>%
  merge(ninetydays, by = "MCEID",
        suffixes = c("", "_READMISSION90"),
        all.x = TRUE) %>%
  merge(mce[,c("MCEID", "PATIENT_ID")], by = "MCEID",
        all.x = TRUE) %>%
  merge(patient[,c("ID", "BIRTH_DATE", "GENDER")],
        by.x = "PATIENT_ID", by.y = "ID",
        all.x = TRUE) %>%
  dplyr::mutate(
    PatientAge = lubridate::year(lubridate::as.period(lubridate::interval(
      start = BIRTH_DATE, end = OPERATION_DATE))))


regdata <- regdata_all %>%
  dplyr::filter(STATUS == 1) %>%
  dplyr::mutate(
    OPERATION_DATE = as.Date(OPERATION_DATE),
    DISCHARGE_DATE = as.Date(DISCHARGE_DATE),
    IN_HOUSE_DEATH_DATE = as.Date(IN_HOUSE_DEATH_DATE)
  )

figstr <- 0.61
tmp <- Sys.setlocale(category = "LC_ALL", locale = "nb_NO.UTF-8")

figfolder <- paste0("C:/Users/kth200/OneDrive - Helse Nord RHF/Dokumenter/regdata/ethirgast/fig/")
if (!dir.exists(figfolder)) {
  dir.create(figfolder)
}
tabfolder <- paste0("C:/Users/kth200/OneDrive - Helse Nord RHF/Dokumenter/regdata/ethirgast/tab/")
if (!dir.exists(tabfolder)) {
  dir.create(tabfolder)
}
@

\begin{document}
\maketitle

\section{Registrations in Ethirgast}

This document contains some summary statistics for Ethirgast. It will be expanded as
the number of registrations increase.

<<'Fig. Age distribution', include=FALSE, echo=FALSE, eval=T>>=
outfile <- "PatientAge.pdf"
outfile <- paste0(figfolder, outfile)
gr <- c(0, seq(20, 80, 10)+1, 120)
regdata$VariabelGr <- cut(regdata$PatientAge, breaks=gr, include.lowest=TRUE, right=FALSE)
grtxt <- c('0-20', '21-30', '31-40', '41-50', '51-60', '61-70', '71-80', '80+')
tmp <- regdata %>% dplyr::filter(operation_group != "Other")
AntHoved <- table(tmp[, c("GENDER", "VariabelGr")])
NHoved <- rowSums(AntHoved)
FigTypUt <- rapFigurer::figtype(outfile=outfile, fargepalett="BlaaOff", pointsizePDF=12)
farger <- FigTypUt$farger
ymax <- max(AntHoved,na.rm=T)*1.25
pos <- barplot(AntHoved, beside=TRUE, las=1, ylab="Number of patients",
               sub="Age group",
               col=farger[c(1,2)], border='white', ylim=c(0, ymax), xaxt='n')
mtext(at=colMeans(pos), grtxt, side=1, las=1, cex=1, adj=0.5, line=0.5)
legend('topright', c(paste0('Male, N=', NHoved[1]), paste0('Female, N=', NHoved[2])), bty='n',
       fill=farger[c(1,2)], border=NA, ncol=1, cex=1)
title(main = "Age at time of operation", line=1, font.main=1, cex.main=1.3)
if ( outfile != '') {dev.off()}
@


\begin{figure}[ht]
\centering
\includegraphics[width=\Sexpr{figstr}\textwidth]{\Sexpr{figfolder}PatientAge.pdf}
\caption{Number of completed registrations grouped by age and gender}
\end{figure}

<<'Table: Number of registrations', results='asis', echo=FALSE>>=

Tabell <- as.data.frame(table(regdata$operation_group, useNA = 'ifany')) %>%
  arrange(-Freq)
names(Tabell) <- c("Operation", "N")

print(xtable::xtable(Tabell, digits=0,
                     caption='Completed registrations by operation group'),
      include.rownames=FALSE)

regdata <- regdata %>% dplyr::filter(operation_group != "Other")
registration <- registration %>% dplyr::filter(operation_group != "Other")
readmission <- readmission %>% dplyr::filter(MCEID %in% registration$MCEID)
ninetydays <- ninetydays %>% dplyr::filter(MCEID %in% registration$MCEID)

reg_overview <- registration %>%
  summarise("Total" = n(),
            "Created" = sum(STATUS==-1),
            "Unfinished" = sum(STATUS==0),
            "Completed" = sum(STATUS==1)) %>%
  bind_rows(readmission %>%
              summarise("Total" = n(),
                        "Created" = sum(STATUS==-1),
                        "Unfinished" = sum(STATUS==0),
                        "Completed" = sum(STATUS==1))) %>%
  bind_rows(ninetydays %>%
              summarise("Total" = n(),
                        "Created" = sum(STATUS==-1),
                        "Unfinished" = sum(STATUS==0),
                        "Completed" = sum(STATUS==1)))

reg_overview$Formtype <- c("registration", "readmission", "ninetydays")
reg_overview <- reg_overview[,c("Formtype", "Total", "Created", "Unfinished", "Completed")]

print(xtable::xtable(reg_overview, digits=0,
                     caption='Registration by registration status. Only obligatory operations.'),
      include.rownames=FALSE)

@

\subsection{Results}

<<'Preliminary results', results='asis', echo=FALSE>>=

relap <- regdata %>%
  dplyr::filter(STATUS_READMISSION == 1,
                operation_group != "Other") %>%
  dplyr::mutate(relap = pmax(RELAPAROTOMY, RELAPAROTOMY_READMISSION,
                             na.rm = TRUE))

tabell1 <- relap %>%
  summarise(n_relap = sum(relap),
            N = n(),
            .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_relap = n_relap/N*100)

tabell2 <- relap %>%
  dplyr::filter(WHO_ECOG_SCORE %in% c(0,1),
                substr(ICD10, 1, 1) == 'C',
                URGENCY == 1) %>%
  summarise(n_relap = sum(relap),
            N = n(),
            .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_relap = n_relap/N*100)

print(xtable::xtable(
  tabell1, digits=1,
  caption='Relaparatomy/laparoscopy rate per operation group. Selection: All patients with a completed readmission/30-day followup.'),
  include.rownames=FALSE)

print(xtable::xtable(
  tabell2, digits=1,
  caption='Relaparatomy/laparoscopy rate per operation group. Selection: All patients with a completed readmission/30-day followup, and with elective surgery, whoecog 0 or 1, and malign diagnosis'),
  include.rownames=FALSE)

followup90 <- regdata %>%
  dplyr::filter(STATUS_READMISSION90 == 1,
                operation_group != "Other") %>%
  summarise("Yes - physically" = sum(FOLLOWUP_STATUS==1),
            "Yes - phone" = sum(FOLLOWUP_STATUS==2),
            "Yes - relatives" = sum(FOLLOWUP_STATUS==3),
            "No" = sum(FOLLOWUP_STATUS==0),
            N =n(),
            .by = operation_group) %>%
  janitor::adorn_totals()

print(xtable::xtable(
  followup90, digits=1,
  align = c("l", "L{1.5in}", rep('r', ncol(followup90)-1)),
  caption='Status 90-day followup per operation group. Only completed forms included'),
  include.rownames=FALSE)

deceased90 <- dplyr::bind_rows(
  regdata %>% dplyr::filter(STATUS_READMISSION90 == 1,
                            operation_group != "Other",
                            FOLLOWUP_STATUS %in% 1:3),
  regdata %>% dplyr::filter(STATUS_READMISSION == 1,
                            OPERATION_DATE < max(as.Date(regdata$OPERATION_DATE)) -
                              lubridate::days(60),
                            operation_group != "Other",
                            IN_HOUSE_DEATH_READMISSION == 1)) %>%
  dplyr::bind_rows(
    regdata %>% dplyr::filter(STATUS_READMISSION == 1,
                              OPERATION_DATE < max(as.Date(regdata$OPERATION_DATE)) -
                                lubridate::days(90),
                              operation_group != "Other",
                              IN_HOUSE_DEATH == 1)) %>%
  # dplyr::mutate(Deceased = pmax(DEATH, IN_HOUSE_DEATH_READMISSION, IN_HOUSE_DEATH, na.rm = TRUE)) %>%
  # dplyr::select(OPERATION_DATE, DEATH, IN_HOUSE_DEATH_READMISSION, IN_HOUSE_DEATH, Deceased)
  dplyr::summarise(
    n_dead = sum(DEATH | IN_HOUSE_DEATH_READMISSION | IN_HOUSE_DEATH, na.rm = TRUE),
    N = n(),
    .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_dead90 = n_dead/N*100)

print(xtable::xtable(
  deceased90, digits=1,
  caption='Deceased after 90 days. Selection: Denominator consists of all patients who have a completed
  ninety day form with a positive answer to the question "Has patient been followed up?". In addition, patients who are registered as deceased In-house (90 days prior to most resent registration) or In-house readmission (60 days prior to most resent registration) are included. The nominator consists of all patients in the denominator that are registered as deceased on either registration, readmission or ninetyday-form.'),
  include.rownames=FALSE)


anastomosis_leakage <- regdata %>%
  dplyr::filter(ANASTOMOSIS ==1,
                OPERATION_DATE < max(as.Date(regdata$OPERATION_DATE)) -
                  lubridate::days(30),
                operation_group != "Other") %>%
  dplyr::mutate(leak = ANASTOMOTIC_LEAK | RELAPAROTOMY_YES_READMISSION == 1) %>%
  dplyr::summarise(
    n_leak = sum(leak, na.rm = TRUE),
    N = n(),
    .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_leak = n_leak/N*100)

print(xtable::xtable(
  anastomosis_leakage, digits=1,
  caption='Anastomosis leakage (within 30 days). Selection: Denominator consists of all patients who have a new anastomosis created. The nominator consists of all patients in the denominator that are registered with anastomosis leakage in either the registration or readmission form.'),
  include.rownames=FALSE)


anastomosis_leakage <- regdata %>%
  dplyr::filter(ANASTOMOSIS ==1,
                STATUS_READMISSION == 1,
                operation_group != "Other") %>%
  dplyr::mutate(leak = ANASTOMOTIC_LEAK | RELAPAROTOMY_YES_READMISSION == 1) %>%
  dplyr::summarise(
    n_leak = sum(leak, na.rm = TRUE),
    N = n(),
    .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_leak = n_leak/N*100)

print(xtable::xtable(
  anastomosis_leakage, digits=1,
  caption='Anastomosis leakage (within 30 days). Selection: Same as above, but with the additional constaint that the readmission form has to be completed.'),
  include.rownames=FALSE)


followup_v2 <- regdata %>%
  dplyr::filter(operation_group != "Other",
                OPERATION_DATE < max(as.Date(regdata$OPERATION_DATE)) -
                              lubridate::days(110)) %>%
  dplyr::summarise(N = n(),
                   N_complete_followup = sum(STATUS_READMISSION90 == 1, na.rm = TRUE),
                   N_followed_up = sum(FOLLOWUP_STATUS %in% 1:3 & STATUS_READMISSION90 == 1),
                   .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_followed_up = N_followed_up/N*100)

print(xtable::xtable(
  followup_v2, digits=1,
  align = c("l", "L{1.5in}", rep('r', ncol(followup_v2)-1)),
  caption=paste0('N is the number of complete admission forms with operation date 110
  days prior to most resent registration, while N\\_complete\\_followup is the number
  of closed ninety days forms among the N. N\\_followed\\_up is the number
  forms where the patient has been followed up among N\\_complete\\_followup.
  pst\\_followed\\_up is the corresponding percetage.')),
  include.rownames=FALSE)

# IN_HOUSE_DEATH
# IN_HOUSE_DEATH_DATE
# IN_HOUSE_DEATH_READMISSION
# IN_HOUSE_DEATH_DATE_READMISSION
# DEATH
# DEATH_DATE

@





\end{document}

\documentclass[a4paper]{article} % ,twoside
% \usepackage[norsk]{babel}
% \usepackage[utf8x]{inputenc}
% \usepackage{subfig}
% \usepackage{pdfpages}
% \usepackage{booktabs}
% \usepackage{caption}
% \usepackage{amssymb}
% \usepackage[a4paper]{geometry}
\usepackage[pdftex, colorlinks, linkcolor=lysblaa, urlcolor=lysblaa]{hyperref}

\title{Ethirgast}
% \author{Ethirgast}

%setter gr√• skrift fremfort sort
\usepackage{xcolor}
\usepackage{graphicx}
% \pagestyle{myheadings}
% \definecolor{lysblaa}{rgb}{0.27,0.51,0.71}
% \definecolor{moerkgraa}{rgb}{0.25,0.25,0.25}
% \color{moerkgraa}

<<'initOpts',include=FALSE>>=
knitr::opts_chunk$set(warnings=FALSE,echo=FALSE)
knitr::opts_knit$set(root.dir = './')
@


<<LastData, include=FALSE, cache=FALSE>>=
# setwd('c:/GIT/nnrr/doc/')
rm(list=ls())
# library(nnrr)
library(dplyr)
# library(tidyr)
options(dplyr.summarise.inform = FALSE)

# centre <- read.csv("~/softlinks/mydata/ethirgast/centre_202405131159.csv")
# mce <- read.csv("~/softlinks/mydata/ethirgast/mce_202405131200.csv")
# ninetydays <- read.csv("~/softlinks/mydata/ethirgast/ninetydays_202405131200.csv")
# patient <- read.csv("~/softlinks/mydata/ethirgast/patient_202405131201.csv")
# readmission <- read.csv("~/softlinks/mydata/ethirgast/readmission_202405131201.csv")
# registration <- read.csv("~/softlinks/mydata/ethirgast/registration_202405131201.csv")

centre <- rapbase::loadRegData("ethirgast", "SELECT * FROM centre")
mce <- rapbase::loadRegData("ethirgast", "SELECT * FROM mce")
ninetydays <-
  rapbase::loadRegData("ethirgast", "SELECT * FROM ninetydays") %>%
  filter(CENTREID == 1)
patient <- rapbase::loadRegData("ethirgast", "SELECT * FROM patient")
readmission <-
  rapbase::loadRegData("ethirgast", "SELECT * FROM readmission")%>%
  filter(CENTREID == 1)
registration <-
  rapbase::loadRegData("ethirgast", "SELECT * FROM registration") %>%
  filter(CENTREID == 1)

regdata_all <- registration %>%
  dplyr::filter(CENTREID == 1) %>%
  merge(readmission, by = "MCEID",
        suffixes = c("", "_READMISSION"),
        all.x = TRUE) %>%
  merge(ninetydays, by = "MCEID",
        suffixes = c("", "_READMISSION90"),
        all.x = TRUE) %>%
  merge(mce[,c("MCEID", "PATIENT_ID")], by = "MCEID",
        all.x = TRUE) %>%
  merge(patient[,c("ID", "BIRTH_DATE", "GENDER")],
        by.x = "PATIENT_ID", by.y = "ID",
        all.x = TRUE) %>%
  dplyr::mutate(
    PatientAge = lubridate::year(lubridate::as.period(lubridate::interval(
      start = BIRTH_DATE, end = OPERATION_DATE))))

regdata <- regdata_all %>%
  dplyr::filter(STATUS == 1)

regdata <- regdata %>%
  mutate(
    operation_group = case_when(
      (substr(NCSP, 1, 3) == "JFB" |
         (substr(NCSP, 1, 3) == "JFB" & (substr(NCSP, 4, 5) %in% 20:64))) ~ "Colonic resection",
      substr(NCSP, 1, 3) == "JGB" ~ "Rectal resection",
      substr(NCSP, 1, 3) == "JCC" ~ "Oesofagus resection",
      substr(NCSP, 1, 3) %in% c("JDC", "JDD") ~ "Ventricle resection",
      substr(NCSP, 1, 3) %in% c("JJB") ~ "Liver resection",
      substr(NCSP, 1, 5) %in% c("JLC30","JLC31") ~ "Whipple's procedure",
      substr(NCSP, 1, 5) %in% c('JLC10','JLC11', 'JLC00',
                                'JLC20','JLC40', 'JLC50', 'JLC96') ~ "Distal and other pancreatic"
    ),
    operation_group = ifelse(is.na(operation_group), "Other", operation_group),
    OPERATION_DATE = as.Date(OPERATION_DATE),
    DISCHARGE_DATE = as.Date(DISCHARGE_DATE),
    IN_HOUSE_DEATH_DATE = as.Date(IN_HOUSE_DEATH_DATE)
  )

figstr <- 0.61
tmp <- Sys.setlocale(category = "LC_ALL", locale = "nb_NO.UTF-8")

figfolder <- paste0("~/mydata/ethirgast/first_report/")
if (!dir.exists(figfolder)) {
  dir.create(figfolder)
}
tabfolder <- paste0("~/mydata/ethirgast/first_report/")
if (!dir.exists(tabfolder)) {
  dir.create(tabfolder)
}
@

\begin{document}
\maketitle

\section{Registrations in Ethirgast}

This document contains some summary statistics for Ethirgast. It will be expanded as
the number of registrations increase.

<<'Fig. Age distribution', include=FALSE, echo=FALSE, eval=T>>=
outfile <- "PatientAge.pdf"
outfile <- paste0(figfolder, outfile)
gr <- c(0, seq(20, 80, 10)+1, 120)
regdata$VariabelGr <- cut(regdata$PatientAge, breaks=gr, include.lowest=TRUE, right=FALSE)
grtxt <- c('0-20', '21-30', '31-40', '41-50', '51-60', '61-70', '71-80', '80+')
AntHoved <- table(regdata[, c("GENDER", "VariabelGr")])
NHoved <- rowSums(AntHoved)
FigTypUt <- rapFigurer::figtype(outfile=outfile, fargepalett="BlaaOff", pointsizePDF=12)
farger <- FigTypUt$farger
ymax <- max(AntHoved,na.rm=T)*1.25
pos <- barplot(AntHoved, beside=TRUE, las=1, ylab="Number of patients",
               sub="Age group",
               col=farger[c(1,2)], border='white', ylim=c(0, ymax), xaxt='n')
mtext(at=colMeans(pos), grtxt, side=1, las=1, cex=1, adj=0.5, line=0.5)
legend('topright', c(paste0('Male, N=', NHoved[1]), paste0('Female, N=', NHoved[2])), bty='n',
       fill=farger[c(1,2)], border=NA, ncol=1, cex=1)
title(main = "Age at time of operation", line=1, font.main=1, cex.main=1.3)
if ( outfile != '') {dev.off()}
@


\begin{figure}[ht]
\centering
\includegraphics[width=\Sexpr{figstr}\textwidth]{\Sexpr{figfolder}PatientAge.pdf}
\caption{Number of completed registrations grouped by age and gender}
\end{figure}

<<'Table: Number of registrations', results='asis', echo=FALSE>>=

Tabell <- as.data.frame(table(regdata$operation_group, useNA = 'ifany')) %>%
  arrange(-Freq)
names(Tabell) <- c("Operation", "N")

print(xtable::xtable(Tabell, digits=0,
                     caption='Completed registrations by operation group'),
      include.rownames=FALSE)

Tabell_other <- regdata %>%
  dplyr::filter(operation_group == "Other") %>%
  dplyr::count(NCSP) %>%
  dplyr::arrange(-n)

print(xtable::xtable(Tabell_other, digits=0,
                     caption='Content of group other'),
      include.rownames=FALSE)


reg_overview <- registration %>% filter(CENTREID == 1) %>%
  summarise("Total" = n(),
            "Created" = sum(STATUS==-1),
            "Unfinished" = sum(STATUS==0),
            "Completed" = sum(STATUS==1)) %>%
  bind_rows(readmission %>% filter(CENTREID == 1) %>%
              summarise("Total" = n(),
                        "Created" = sum(STATUS==-1),
                        "Unfinished" = sum(STATUS==0),
                        "Completed" = sum(STATUS==1))) %>%
  bind_rows(ninetydays %>% filter(CENTREID == 1) %>%
              summarise("Total" = n(),
                        "Created" = sum(STATUS==-1),
                        "Unfinished" = sum(STATUS==0),
                        "Completed" = sum(STATUS==1)))

reg_overview$Formtype <- c("registration", "readmission", "ninetydays")
reg_overview <- reg_overview[,c("Formtype", "Total", "Created", "Unfinished", "Completed")]

print(xtable::xtable(reg_overview, digits=0,
                     caption='Registration by registration status'),
      include.rownames=FALSE)

@

\clearpage

\subsection{Data quality}
\subsubsection{Data quality: variable completeness}

<<'Table: Completeness of variables', results='asis', echo=FALSE>>=
pst_na <- function(x) {sum(is.na(x))/length(x)*100}

var_pst_na <- registration %>%
  dplyr::filter(STATUS==1) %>%
  purrr::map_df(pst_na) %>%
  tidyr::pivot_longer(everything(),
                      names_to = "Variable",
                      values_to = "pst_missing") %>%
  dplyr::mutate(pst_missing = round(pst_missing, 1)) %>%
  dplyr::filter(pst_missing > 0) %>%
  dplyr::arrange(-pst_missing)

print(xtable::xtable(
  var_pst_na, digits=1,
  caption='Variable completeness, registration form. Percentage of missing variables in completed forms. Variables with no empty fields are excluded, but might still have missing values if missing is coded as something other than NULL. Sorted by decreasing percentage of missing values. Some values may be NULL by design, and do not necessarily represent missing values.'),
  include.rownames=FALSE)

var_pst_na_readmission <- readmission %>%
  dplyr::filter(STATUS==1) %>%
  purrr::map_df(pst_na) %>%
  tidyr::pivot_longer(everything(),
                      names_to = "Variable",
                      values_to = "pst_missing") %>%
  dplyr::mutate(pst_missing = round(pst_missing, 1)) %>%
  dplyr::filter(pst_missing > 0) %>%
  dplyr::arrange(-pst_missing)

print(xtable::xtable(
  var_pst_na_readmission, digits=1,
  caption='Variable completeness, readmission form. Percentage of missing variables in completed forms. Variables with no empty fields are excluded, but might still have missing values if missing is coded as something other than NULL. Sorted by decreasing percentage of missing values. Some values may be NULL by design, and do not necessarily represent missing values.'),
  include.rownames=FALSE)

var_pst_na_ninetydays <- ninetydays %>%
  dplyr::filter(STATUS==1) %>%
  purrr::map_df(pst_na) %>%
  tidyr::pivot_longer(everything(),
                      names_to = "Variable",
                      values_to = "pst_missing") %>%
  dplyr::mutate(pst_missing = round(pst_missing, 1)) %>%
  dplyr::filter(pst_missing > 0) %>%
  dplyr::arrange(-pst_missing)

print(xtable::xtable(
  var_pst_na_ninetydays, digits=1,
  caption='Variable completeness, ninety day followup form. Percentage of missing variables in completed forms. Variables with no empty fields are excluded, but might still have missing values if missing is coded as something other than NULL. Sorted by decreasing percentage of missing values. Some values may be NULL by design, and do not necessarily represent missing values.'),
  include.rownames=FALSE)

@

\clearpage

\subsubsection{Summary: Registration form}

<<'Table: summary of forms', results='asis', echo=FALSE>>=
reg_summary <- summary(registration)
print(xtable::xtable(reg_summary[, 1:4]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 5:8]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 9:12]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 13:16]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 17:20]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 21:24]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 25:28]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 29:32]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 33:36]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 37:40]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 41:44]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 45:48]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 49:52]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 53:56]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 57:60]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 61:64]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 65:68]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 69:72]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 73:75]), include.rownames=FALSE)
@

\clearpage

\subsubsection{Summary: Readmission form}

<<'Table: summary of readmission form', results='asis', echo=FALSE>>=
reg_summary <- summary(readmission)
print(xtable::xtable(reg_summary[, 1:4]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 5:8]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 9:12]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 13:16]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 17:20]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 21:24]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 25:28]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 29:31]), include.rownames=FALSE)
@

\clearpage

\subsubsection{Summary: ninetyday form}

<<'Table: summary of ninetyday form', results='asis', echo=FALSE>>=
reg_summary <- summary(ninetydays)
print(xtable::xtable(reg_summary[, 1:4]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 5:8]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 9:12]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 13:16]), include.rownames=FALSE)
print(xtable::xtable(reg_summary[, 17:18]), include.rownames=FALSE)
@

\clearpage

\subsection{Results}

<<'Preliminary results', results='asis', echo=FALSE>>=

relap <- regdata %>%
  dplyr::filter(STATUS_READMISSION == 1,
    operation_group != "Other") %>%
  dplyr::mutate(relap = pmax(RELAPAROTOMY, RELAPAROTOMY_READMISSION,
                            na.rm = TRUE))

tabell1 <- relap %>%
  summarise(n_relap = sum(relap),
            N = n(),
            .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_relap = n_relap/N*100)

tabell2 <- relap %>%
  dplyr::filter(WHO_ECOG_SCORE %in% c(0,1),
                substr(ICD10, 1, 1) == 'C',
                URGENCY == 1) %>%
  summarise(n_relap = sum(relap),
            N = n(),
            .by = operation_group) %>%
  janitor::adorn_totals() %>%
  dplyr::mutate(pst_relap = n_relap/N*100)

print(xtable::xtable(
  tabell1, digits=1,
  caption='Relaparatomy/laparoscopy rate per operation group. Selection: All patients with a completed readmission/30-day followup.'),
  include.rownames=FALSE)

print(xtable::xtable(
  tabell2, digits=1,
  caption='Relaparatomy/laparoscopy rate per operation group. Selection: All patients with a completed readmission/30-day followup, and with elective surgery, whoecog 0 or 1, and malign diagnosis'),
  include.rownames=FALSE)

followup90 <- regdata %>%
  dplyr::filter(STATUS_READMISSION90 == 1,
    operation_group != "Other") %>%
  summarise("Yes - physically" = sum(FOLLOWUP_STATUS==1),
            "Yes - phone" = sum(FOLLOWUP_STATUS==2),
            "Yes - relatives" = sum(FOLLOWUP_STATUS==3),
            "No" = sum(FOLLOWUP_STATUS==0),
            N =n(),
            .by = operation_group) %>%
  janitor::adorn_totals()

print(xtable::xtable(
  followup90, digits=1,
  caption='Status 90-day followup per operation group. Only completed forms included'),
  include.rownames=FALSE)

@





\end{document}
